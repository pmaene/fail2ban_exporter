name: Go

on:
  pull_request: {}
  push:
    branches:
      - master

    tags: []

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.2

      - name: Run GolangCI-Lint
        uses: pmaene/golangci-lint-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build
    needs: lint
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Checkout
        uses: actions/checkout@v2.3.2

      - name: Set up Go
        uses: actions/setup-go@v2.1.2
        with:
          go-version: "1.14"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2.1.1
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  merge:
    name: Merge
    needs: lint
    runs-on: ubuntu-latest

    if: >
      github.event_name == 'pull_request' &&
      github.event.pull_request.draft == false && (
        github.event.action == 'opened' ||
        github.event.action == 'reopened' ||
        github.event.action == 'synchronize'
      ) &&
      github.actor == 'dependabot[bot]'

    steps:
      - name: Merge Pull Request
        uses: actions/github-script@v2.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.pulls.merge({
              merge_method: "rebase",
              owner: context.repo.owner,
              pull_number: context.payload.pull_request.number,
              repo: context.repo.repo,
            })
